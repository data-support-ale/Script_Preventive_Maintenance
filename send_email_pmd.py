#!/usr/bin/env python

import sys
import os
import getopt
import json
import logging
import subprocess
from time import gmtime, strftime, localtime, sleep
import requests
import datetime
#import smtplib
#import mimetypes
import re
from support_tools import get_credentials
from support_send_notification import send_message,send_file,send_alert

#### Example of JSON content
#### {"@timestamp":"2021-11-10T09:42:02.867257+01:00","type":"syslog_json","relayip":"10.130.7.244","hostname":"OS6860N","message":"10:55:46.686 OS6860E-Core2 swlogd COREDUMPER  ALRM: Dumping core for task dpcmm","end_msg":""}
### {"@timestamp":"2021-11-10T09:42:02.867257+01:00","type":"syslog_json","relayip":"10.130.7.244","hostname":"OS6860N","message":"OS6860E-Core2 swlogd PMD main ALRT: PMD generated at /flash/pmd/pmd-agCmm-12.29.2020-11.26.28","end_msg":""}

script_name = sys.argv[0]
runtime = strftime("%d_%b_%Y_%H_%M_%S", localtime())

uname = os.system('uname -a')
os.system('logger -t montag -p user.info Executing script ' + script_name)

switch_user, switch_password, jid, gmail_user, gmail_password, mails,ip_server_log = get_credentials()

def pmd_issue(ipadd,jid):
  #ssh session to start python script remotely
  os.system('logger -t montag -p user.info PMD Script - A Core DUMP is generated by switch: ' + ipadd[1])
  info = "Switch: {0} - A Core DUMP is generated by switch".format(ipadd)
  send_alert(info,jid)

def extract_ipadd():
   last = ""
   with open("/var/log/devices/lastlog_pmd.json", "r", errors='ignore') as log_file:
    for line in log_file:
        last = line

   with open("/var/log/devices/lastlog_pmd.json", "w", errors='ignore') as log_file:
    log_file.write(last)

   with open("/var/log/devices/lastlog_pmd.json", "r", errors='ignore') as log_file:
    log_json = json.load(log_file)
    ipadd = log_json["relayip"]
    host = log_json["hostname"]
    ipadd = str(ipadd)
    print(ipadd)
   return host,ipadd;

ipadd = extract_ipadd()

if sys.argv[1] == "pmd":
      print("call function pmd_issue")
      os.system('logger -t montag -p user.info PMD Script - Variable received from rsyslog ' + sys.argv[1])
      pmd_issue(ipadd,jid)
      os.system('logger -t montag -p user.info PMD Script - Sending Rainbow Notification')
      sys.exit(0)
else:
      os.system('logger -t montag -p user.info PMD Script - Wrong parameter received ' + sys.argv[1])
      sys.exit(2)

### stop process ###
sys.exit(0)