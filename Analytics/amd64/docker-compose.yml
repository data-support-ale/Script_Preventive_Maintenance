version: "3"

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier:
  back-tier:

services:
  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    restart: unless-stopped
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: Letacla01*
      DOCKER_INFLUXDB_INIT_ORG: ALE
      DOCKER_INFLUXDB_INIT_BUCKET: ALE
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: txKsBZJffvSDBSv-QM1Z4R0CWDYhCp4O-EYJHtlWERR1KtWtuKdX6xu3jXzYgr2Pe_z0Z3BW_wvTChLXBO2jrQ==
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    ports:
      - 8086:8086
    expose:
      - 8086
    networks:
      - back-tier
    deploy:
      mode: global

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    expose:
      - 9100
    networks:
      - back-tier
    deploy:
      mode: global

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    depends_on:
      - node-exporter
      - cadvisor
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/home/admin-support/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - back-tier

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
      - influxdb 
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: Letacla01*
      GF_USERS_ALLOW_SIGN_UP: false
      GF_AUTH_ANONYMOUS_ORG_NAME: ALE Preventive Maintenance
      GF_DEFAULT_INSTANCE_NAME: Debian1
      GF_PLUGIN_GRAFANA_IMAGE_RENDERER_RENDERING_IGNORE_HTTPS_ERRORS: true
      GF_USERS_ALLOW_ORG_CREATE: False
      GF_LOGIN_HINT: username
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - back-tier
      - front-tier


